
Паттерн синглтон --- можно применить для подключения к бд, 
обернуть так чтобы подключение выполнилось только единожды, 
или если еще не подключено. 
подключение к бд делаем только если этот метод не был запущен и объект пдо еще не был создан


return $this ; //так возвращается весь текущий экземпляр объекта, все его параметры
$this->query->bindValue($i, $par);//встроенная функция $i=1 значит что $par подставляется вместо первого вопроса в запросе
query->fetchAll(PDO::FETCH_OBJ);//FETCH_OBJ потомучто мы используем ООП и мы работаем с объектами класса
rowCount();//встроенная функция считает число строк в массиве
query('SELECT * FROM userz WHERE username IN (?,?)', ['first user','third user']);//? это плейсхолдер для значения из массива для bindValue
query('SELECT * FROM userz WHERE username=?', ['first user']);//? это плейсхолдер для значения из массива для bindValue
query('SELECT * FROM userz WHERE username IN (:username)', ['first user']);//вариант через метку для значения из массива
сам query передаем в prepare, в виде $this->pdo->prepare($sql) чтобы исключить sql-инъекции
$this->query = $this->pdo->prepare($sql);//prepare подготавливает запрос удаляя из него символы которые похожи на sql-инъекцию
? - это метка чтобы в запрос не попала sql-инъекция   
$sql = "UPDATE {$table} SET {$set} WHERE id={$id}";
$sql = "INSERT INTO {$table} (`" .implode('`, `', array_keys($fields))."`) VALUES (" . rtrim( $values, ','). ")";
$sql="DELETE FROM {$table} WHERE {$field} {$operator} ?";
$sql="SELECT * FROM {$table} WHERE {$field} {$operator} ?";
$sql="{$action} FROM {$table} WHERE {$field} {$operator} ?";           
==============================================
PDO.php:
array_keys($fields)//создает новый массив из ключей массива
bindColumn($column,&$param,$type, $maxlen,$driverdata)//
bindValue($i, $par)//связывает $i со значением $par; $i-индекс вопросительного знака в запросе
in_array($operator, $operators)//возвращает тру если значение $operator есть в массиве $operators
fetchAll(PDO::FETCH_OBJ)//возвращает объект в результате запроса
rowCount();//встроенная функция считает число строк в массиве
implode('`, `', array_keys($fields))//функция соединяет в строку все члены массива вставляя между ними клей '`, `'
password_hash(Input::get('password'), PASSWORD_DEFAULT)//PASSWORD_DEFAULT-дефолтный алгоритм кеширования
----------------------------------------------
my_func.php:
query($sql, [$value])
action($action,$table, $where=[])
delete($table, $where=[])
get($table, $where=[])
----------------------------------------------
6й закончил